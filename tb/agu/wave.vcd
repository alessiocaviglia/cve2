$version Generated by VerilatedVcd $end
$date Wed Apr 17 09:20:02 2024 $end
$timescale 1ps $end

 $scope module TOP $end
  $var wire 30 0 addr_i [29:0] $end
  $var wire 32 9 addr_o [31:0] $end
  $var wire  1 2 agu_addr_sel_o $end
  $var wire  1 . clk_i $end
  $var wire  1 7 get_rd $end
  $var wire  1 6 get_rd_noincr $end
  $var wire  1 4 get_rs1 $end
  $var wire  1 5 get_rs2 $end
  $var wire  1 3 load $end
  $var wire  1 1 raddr_a_sel_o $end
  $var wire  1 8 ready_o $end
  $var wire  1 / rst_ni $end
  $scope module vce2_agu $end
   $var wire 32 = AddrWidth [31:0] $end
   $var wire 30 0 addr_i [29:0] $end
   $var wire 32 9 addr_o [31:0] $end
   $var wire 30 < addr_rd_d [29:0] $end
   $var wire 30 ( addr_rd_q [29:0] $end
   $var wire 30 : addr_rs1_d [29:0] $end
   $var wire 30 & addr_rs1_q [29:0] $end
   $var wire 30 ; addr_rs2_d [29:0] $end
   $var wire 30 ' addr_rs2_q [29:0] $end
   $var wire  1 2 agu_addr_sel_o $end
   $var wire  1 . clk_i $end
   $var wire  1 7 get_rd $end
   $var wire  1 6 get_rd_noincr $end
   $var wire  1 4 get_rs1 $end
   $var wire  1 5 get_rs2 $end
   $var wire  1 % incr_rd $end
   $var wire  1 # incr_rs1 $end
   $var wire  1 $ incr_rs2 $end
   $var wire  1 , ld_rd $end
   $var wire  1 * ld_rs1 $end
   $var wire  1 + ld_rs2 $end
   $var wire  1 3 load $end
   $var wire  2 - next_state [1:0] $end
   $var wire  1 1 raddr_a_sel_o $end
   $var wire  1 8 ready_o $end
   $var wire  1 / rst_ni $end
   $var wire  2 ) state [1:0] $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
0%
b000000000000000000000000000000 &
b000000000000000000000000000000 '
b000000000000000000000000000000 (
b00 )
1*
0+
0,
b01 -
1.
1/
b000000000000000000000000001010 0
01
02
13
04
05
06
07
08
b00000000000000000000000000000000 9
b000000000000000000000000001010 :
b000000000000000000000000000000 ;
b000000000000000000000000000000 <
b00000000000000000000000000100000 =
#1
0.
#2
b000000000000000000000000001010 &
b01 )
0*
1,
b10 -
1.
b000000000000000000000000010100 0
11
b000000000000000000000000010100 <
#3
0.
#4
b000000000000000000000000010100 (
b10 )
1+
0,
b11 -
1.
b000000000000000000000000101000 0
01
12
b000000000000000000000000101000 ;
#5
0.
#6
1#
b000000000000000000000000101000 '
b11 )
0+
b00 -
1.
02
03
14
18
b00000000000000000000000000101000 9
b000000000000000000000000001011 :
#7
0.
#8
0#
1$
b000000000000000000000000001011 &
b00 )
1.
04
15
08
b00000000000000000000000010100000 9
b000000000000000000000000101001 ;
#9
0.
#10
0$
b000000000000000000000000101001 '
1.
05
16
b00000000000000000000000001010000 9
#11
0.
#12
1%
1.
06
17
b000000000000000000000000010101 <
#13
0.
#14
0%
b000000000000000000000000010101 (
1.
07
b00000000000000000000000000000000 9
#15
0.
#16
1.
#17
0.
#18
1.
#19
0.
